{"ast":null,"code":"var _jsxFileName = \"/home/abdul/my/react/todo/src/App.js\";\nimport React, { Component } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoItem from \"./TodoItem\";\nimport './index.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todo: \"\",\n      todos: []\n    };\n    this.addTodo = this.addTodo.bind(this);\n    this.handleCheckChange = this.handleCheckChange.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.delete = this.delete.bind(this);\n  }\n\n  addTodo(todo) {\n    this.setState({\n      todos: [todo, ...this.state.todos]\n    });\n  }\n\n  delete(id) {\n    const prevTodo = [...this.state.todos];\n    const newTodos = prevTodo.filter((prevTodo, index) => {\n      return prevTodo.id !== id;\n    });\n    console.log(id);\n    console.log(newTodos);\n    this.setState({\n      todos: newTodos\n    });\n  }\n\n  handleCheckChange(id) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.map(todo => {\n        if (todo.id === id) {\n          return { ...todo,\n            complete: !todo.complete\n          };\n        }\n\n        return todo;\n      });\n      return {\n        todos: updatedTodos\n      };\n    });\n  }\n\n  handleClear() {\n    localStorage.removeItem('data');\n    this.setState({\n      todos: []\n    });\n  }\n\n  componentDidMount() {\n    const todoList = JSON.parse(localStorage.getItem(\"data\"));\n    console.log(todoList);\n    return todoList ? this.setState({\n      todos: todoList\n    }) : null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const jsonTodo = JSON.stringify(this.state.todos);\n    localStorage.setItem(\"data\", jsonTodo);\n  }\n\n  render() {\n    const Todos = this.state.todos ? React.createElement(\"table\", {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.todos.map(todo => {\n      return React.createElement(TodoItem, {\n        key: todo.id,\n        todo: todo,\n        handleCheckChange: this.handleCheckChange,\n        onDelete: this.delete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    })) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Add a todo\");\n    return React.createElement(\"div\", {\n      className: \"todo-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      onSubmit: this.addTodo,\n      onClear: this.handleClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), Todos);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/abdul/my/react/todo/src/App.js"],"names":["React","Component","TodoForm","TodoItem","App","constructor","state","todo","todos","addTodo","bind","handleCheckChange","handleClear","delete","setState","id","prevTodo","newTodos","filter","index","console","log","prevState","updatedTodos","map","complete","localStorage","removeItem","componentDidMount","todoList","JSON","parse","getItem","componentDidUpdate","prevProps","jsonTodo","stringify","setItem","render","Todos"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport TodoForm from \"./TodoForm\"\nimport TodoItem from \"./TodoItem\"\nimport  './index.css';\n\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state ={\n            todo:\"\",\n            todos:[]\n        } \n        this.addTodo =this.addTodo.bind(this)\n        this.handleCheckChange =this.handleCheckChange.bind(this)\n        this.handleClear = this.handleClear.bind(this)\n        this.delete = this.delete.bind(this)\n    }\n    addTodo(todo){\n      this.setState({\n          todos:[todo,...this.state.todos]\n      })\n    }\n    delete(id){\n        const prevTodo = [...this.state.todos]\n        const newTodos = prevTodo.filter((prevTodo,index)=>{\n            return  prevTodo.id !== id\n        })\n        console.log(id)\n        console.log(newTodos)\n        this.setState({\n            todos:newTodos\n        })\n    }\n    handleCheckChange(id){\n        this.setState(prevState=>{\n        const updatedTodos = prevState.todos.map(todo=>{\n                    if(todo.id === id){\n                        return{ \n                            ...todo,\n                        complete:!todo.complete\n                        }\n                        \n                    }\n                    return todo\n            })\n            return {\n                todos : updatedTodos\n            }\n        })\n    }\n    handleClear(){\n        localStorage.removeItem('data')\n        this.setState({\n            todos:[]\n        })\n    }\n    componentDidMount(){\n        const todoList = JSON.parse(localStorage.getItem(\"data\"))\n        console.log(todoList)\n        return todoList ? \n        this.setState({\n            todos : todoList\n        })\n        : null\n\n    }\n    componentDidUpdate(prevProps,prevState){\n            const jsonTodo = JSON.stringify(this.state.todos)\n            localStorage.setItem(\"data\",jsonTodo)    \n       \n    }\n    \n    render(){\n        const Todos = this.state.todos ?\n          <table width=\"100%\">\n              {\n                 this.state.todos.map(todo =>{\n                    return (\n                        <TodoItem key={todo.id} todo={todo} handleCheckChange={this.handleCheckChange} onDelete={this.delete}/>  \n                    )\n             })\n              }\n          </table>\n           \n         : <h1> Add a todo</h1>\n        return(\n            <div className=\"todo-list\">\n                <TodoForm onSubmit={this.addTodo} onClear={this.handleClear} />\n                {Todos}\n                \n            </div>\n        )\n    }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}