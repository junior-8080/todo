{"ast":null,"code":"var _jsxFileName = \"/home/abdul/myFolder/todo/src/App.js\";\nimport React, { Component } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoItem from \"./TodoItem\";\nimport './index.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todo: \"\",\n      todos: []\n    };\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  addTodo(todo) {\n    this.setState({\n      todos: [todo, ...this.state.todos]\n    });\n  }\n\n  handleCheckChange(id) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      });\n      console.log(prevState.todo);\n      console.log(updatedTodos);\n      return {\n        todos: updatedTodos\n      };\n    });\n    console.log(id);\n  }\n\n  render() {\n    const Todos = this.state.todos.map(todo => {\n      return React.createElement(TodoItem, {\n        key: todo.id,\n        todo: todo,\n        handleCheckChange: this.handleCheckChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    });\n    console.log(Todos);\n    return React.createElement(\"div\", {\n      className: \"todo-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      onSubmit: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), Todos);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/abdul/myFolder/todo/src/App.js"],"names":["React","Component","TodoForm","TodoItem","App","constructor","state","todo","todos","addTodo","bind","setState","handleCheckChange","id","prevState","updatedTodos","map","completed","console","log","render","Todos"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAQ,aAAR;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AACvBI,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,IAAI,EAAC,EADG;AAERC,MAAAA,KAAK,EAAC;AAFE,KAAZ;AAIA,SAAKC,OAAL,GAAc,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAd;AACH;;AACDD,EAAAA,OAAO,CAACF,IAAD,EAAM;AACX,SAAKI,QAAL,CAAc;AACVH,MAAAA,KAAK,EAAC,CAACD,IAAD,EAAM,GAAG,KAAKD,KAAL,CAAWE,KAApB;AADI,KAAd;AAGD;;AACDI,EAAAA,iBAAiB,CAACC,EAAD,EAAI;AACjB,SAAKF,QAAL,CAAcG,SAAS,IAAE;AACzB,YAAMC,YAAY,GAAGD,SAAS,CAACN,KAAV,CAAgBQ,GAAhB,CAAoBT,IAAI,IAAE;AACnC,YAAGA,IAAI,CAACM,EAAL,KAAYA,EAAf,EAAkB;AACdN,UAAAA,IAAI,CAACU,SAAL,GAAiB,CAACV,IAAI,CAACU,SAAvB;AACH;;AACD,eAAOV,IAAP;AACP,OALgB,CAArB;AAMIW,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACP,IAAtB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACA,aAAO;AACHP,QAAAA,KAAK,EAAGO;AADL,OAAP;AAGH,KAZD;AAaAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AACH;;AAEDO,EAAAA,MAAM,GAAE;AACJ,UAAMC,KAAK,GAAG,KAAKf,KAAL,CAAWE,KAAX,CAAiBQ,GAAjB,CAAqBT,IAAI,IAAG;AAClC,aACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACM,EAApB;AAAwB,QAAA,IAAI,EAAEN,IAA9B;AAAoC,QAAA,iBAAiB,EAAE,KAAKK,iBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGN,KAJY,CAAd;AAKCM,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKZ,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKY,KAFL,CADJ;AAOH;;AA7CsB;;AA+C3B,eAAejB,GAAf","sourcesContent":["import React, { Component } from \"react\"\nimport TodoForm from \"./TodoForm\"\nimport TodoItem from \"./TodoItem\"\nimport  './index.css';\n\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state ={\n            todo:\"\",\n            todos:[]\n        } \n        this.addTodo =this.addTodo.bind(this)\n    }\n    addTodo(todo){\n      this.setState({\n          todos:[todo,...this.state.todos]\n      })\n    }\n    handleCheckChange(id){\n        this.setState(prevState=>{\n        const updatedTodos = prevState.todos.map(todo=>{\n                    if(todo.id === id){\n                        todo.completed = !todo.completed\n                    }\n                    return todo\n            })\n            console.log(prevState.todo)\n            console.log(updatedTodos)\n            return {\n                todos : updatedTodos\n            }\n        })\n        console.log(id)\n    }\n    \n    render(){\n        const Todos = this.state.todos.map(todo =>{\n                return (\n                    <TodoItem key={todo.id} todo={todo} handleCheckChange={this.handleCheckChange}/>  \n                )\n         })\n         console.log(Todos)\n        return(\n            <div className=\"todo-list\">\n                <TodoForm onSubmit={this.addTodo}/>\n                {Todos}\n                \n            </div>\n        )\n    }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}